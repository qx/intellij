<templateSet group="Kotlin">
  <template name="test" value="/**&#10;* Test $funName$&#10;* $time$&#10;**/&#10;@Test&#10;@Throws(Exception::class)&#10;fun test_$funName$_$date$() {&#10;       $code$&#10;    }" description="test suit" toReformat="true" toShortenFQNames="true">
    <variable name="funName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="time" expression="time()" defaultValue="" alwaysStopAt="false" />
    <variable name="date" expression="date(&quot;dd_MMM_yyyy_HH_MM&quot;" defaultValue="" alwaysStopAt="false" />
    <variable name="code" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="cmt" value="//*******************************************$var$  Start*******************************************&#10;&#10;&#10;//*******************************************$var$  End  *******************************************" description="comment start end" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="by" value="var $a$: $b$ by Delegates.observable($c$) { prop, old, new -&gt;&#10;   if(new != old){&#10;    &quot;$a$------ changed---: ${old} -&gt; ${new} &quot;.debugPrint&#10;   }&#10;}" description="observable" toReformat="false" toShortenFQNames="true">
    <variable name="a" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="b" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="c" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="soutm" value="println(&quot;----------------------$CLASS$.$METHOD$----------------------&quot;)" description="Prints current class and function name to System.out" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="groovyScript(&quot;_1 ?: '&lt;top&gt;'&quot;, kotlinClassName())" defaultValue="" alwaysStopAt="false" />
    <variable name="METHOD" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="soutmp" value="println(&quot;&lt;----------------------$CLASS$.$METHOD$----------------------&quot;)&#10;println($FORMAT$)&#10;println(&quot;----------------------$CLASS$.$METHOD$----------------------&gt;&quot;)" description="print method and params" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="groovyScript(&quot;_1 ?: '&lt;top&gt;'&quot;, kotlinClassName())" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="true" />
    <variable name="FORMAT" expression="groovyScript(&quot;'\&quot;' + _1.collect { it + ' = [${' + it + '}]'}.join(', ') + '\&quot;'&quot;, functionParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="main" value="fun main($ARGS$) {&#10;  $END$&#10;}" description="main() function" toReformat="true" toShortenFQNames="true">
    <variable name="ARGS" expression="kotlinMainArguments()" defaultValue="" alwaysStopAt="false" />
    <context />
  </template>
  <template name="maina" value="fun main(args: Array&lt;String&gt;) {&#10;  $END$&#10;}" description="main() function" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="maino" value="@JvmStatic&#10;fun main(args: Array&lt;String&gt;) {&#10;  $END$&#10;}" description="main() function" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="sout" value="println($END$)" description="Prints a string to System.out" toReformat="true" toShortenFQNames="false">
    <context />
  </template>
  <template name="serr" value="System.err.println($END$)" description="Prints a string to System.err" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="soutv" value="println(&quot;$EXPR_COPY$ = $DOLLAR${$EXPR$}&quot;)" description="Prints a value to System.out" toReformat="true" toShortenFQNames="true">
    <variable name="DOLLAR" expression="" defaultValue="&quot;$&quot;" alwaysStopAt="false" />
    <variable name="EXPR" expression="kotlinVariable()" defaultValue="&quot;expr&quot;" alwaysStopAt="true" />
    <variable name="EXPR_COPY" expression="escapeString(EXPR)" defaultValue="" alwaysStopAt="false" />
    <context />
  </template>
  <template name="soutp" value="println($FORMAT$)" description="Prints function parameter names and values to System.out" toReformat="true" toShortenFQNames="true">
    <variable name="FORMAT" expression="groovyScript(&quot;'\&quot;' + _1.collect { it + ' = [${' + it + '}]'}.join(', ') + '\&quot;'&quot;, functionParameters())" defaultValue="" alwaysStopAt="false" />
    <context />
  </template>
  <template name="soutf" value="println(&quot;$CLASS$.$METHOD$&quot;)" description="Prints current class and function name to System.out" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="groovyScript(&quot;_1 ?: '&lt;top&gt;'&quot;, kotlinClassName())" defaultValue="" alwaysStopAt="false" />
    <variable name="METHOD" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="false" />
    <context />
  </template>
  <template name="iter" value="for ($VAR$ in $ITERABLE$) {&#10;$END$&#10;}" description="Iterate over elements of iterable (for-in loop)" toReformat="true" toShortenFQNames="true">
    <variable name="ITERABLE" expression="kotlinVariable()" defaultValue="&quot;iterable&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="kotlinSuggestVariableName()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="ifn" value="if ($VAR$ == null) {&#10;$END$&#10;}" description="Inserts ''if null'' expression" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="kotlinVariable()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="inn" value="if ($VAR$ != null) {&#10;$END$&#10;}" description="Inserts ''if not null'' expression" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="kotlinVariable()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="void" value="fun $NAME$($PARAMS$) {&#10;$END$&#10;}" description="Function returning nothing" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="fun0" value="fun $NAME$() : $RETURN$ {&#10;$END$&#10;}" description="Function with no parameters" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN" expression="" defaultValue="&quot;Unit&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="fun1" value="fun $NAME$($PARAM1$ : $PARAM1TYPE$) : $RETURN$ {&#10;$END$&#10;}" description="Function with one parameter" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM1" expression="" defaultValue="&quot;x&quot;" alwaysStopAt="true" />
    <variable name="PARAM1TYPE" expression="" defaultValue="&quot;Any&quot;" alwaysStopAt="true" />
    <variable name="RETURN" expression="" defaultValue="&quot;Unit&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="fun2" value="fun $NAME$($PARAM1$ : $PARAM1TYPE$, $PARAM2$ : $PARAM2TYPE$) : $RETURN$ {&#10;$END$&#10;}" description="Function with two parameters" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM1" expression="" defaultValue="&quot;x&quot;" alwaysStopAt="true" />
    <variable name="PARAM1TYPE" expression="" defaultValue="&quot;Any&quot;" alwaysStopAt="true" />
    <variable name="PARAM2" expression="" defaultValue="&quot;y&quot;" alwaysStopAt="true" />
    <variable name="PARAM2TYPE" expression="" defaultValue="&quot;Any&quot;" alwaysStopAt="true" />
    <variable name="RETURN" expression="" defaultValue="&quot;Unit&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="interface" value="interface $NAME$ {&#10;$END$&#10;}" description="Interface" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="singleton" value="object $NAME$ {&#10;$END$&#10;}" description="Singleton" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="closure" value="{$PARAM$ -&gt; $PARAM_COPY$}" description="Closure (function without name)" toReformat="true" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="&quot;x&quot;" alwaysStopAt="true" />
    <variable name="PARAM_COPY" expression="PARAM" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="anonymous" value="object : $SUPERTYPE$ {&#10;$END$&#10;}" description="Anonymous class" toReformat="true" toShortenFQNames="true">
    <variable name="SUPERTYPE" expression="anonymousSuper()" defaultValue="&quot;Object&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="exfun" value="fun $RECEIVER$.$NAME$($PARAMS$) : $RETURN$ {&#10;$END$&#10;}" description="Extension function" toReformat="true" toShortenFQNames="true">
    <variable name="RECEIVER" expression="" defaultValue="&quot;Any&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;f&quot;" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN" expression="" defaultValue="&quot;Unit&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="exval" value="val $RECEIVER$.$NAME$ : $TYPE$&#10;get() {&#10;$END$&#10;}" description="Extension read-only property" toReformat="true" toShortenFQNames="true">
    <variable name="RECEIVER" expression="" defaultValue="&quot;Any&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;v&quot;" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="&quot;Any&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="exvar" value="var $RECEIVER$.$NAME$ : $TYPE$&#10;get() {&#10;$END$&#10;}&#10;set(value) {&#10; &#10;}" description="Extension read-write property" toReformat="true" toShortenFQNames="true">
    <variable name="RECEIVER" expression="" defaultValue="&quot;Any&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;v&quot;" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="&quot;Any&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="psvm" value="fun main($ARGS$) {&#10;  $END$&#10;}" description="main() function" toReformat="true" toShortenFQNames="true">
    <variable name="ARGS" expression="kotlinMainArguments()" defaultValue="" alwaysStopAt="false" />
    <context />
  </template>
  <template name="psvma" value="fun main(args: Array&lt;String&gt;) {&#10;  $END$&#10;}" description="main() function" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="psvmo" value="@JvmStatic&#10;fun main(args: Array&lt;String&gt;) {&#10;  $END$&#10;}" description="main() function" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
</templateSet>